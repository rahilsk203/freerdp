name: Free Windows RDP

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Install dependencies and enable RDP
      shell: pwsh
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        # Check if user exists, create if not
        $userExists = (net user runneradmin) -ne $null 2>&1
        if (-not $userExists) {
          net user runneradmin MyPassword123! /add
          if ($LASTEXITCODE -ne 0) { Write-Error "Failed to create user"; exit 1 }
        } else {
          Write-Output "User runneradmin already exists"
        }

        # Check if user is already in administrators group
        $isAdmin = (net localgroup administrators | Select-String "runneradmin") -ne $null
        if (-not $isAdmin) {
          net localgroup administrators runneradmin /add
          if ($LASTEXITCODE -ne 0) { Write-Error "Failed to add user to administrators group"; exit 1 }
        } else {
          Write-Output "User runneradmin is already an administrator"
        }

        # Enable Remote Desktop
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

        # Install ngrok
        Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath .

        # Debug: List extracted files to verify ngrok.exe location
        Write-Output "Listing extracted files:"
        Get-ChildItem -Path . -Recurse

        # Check for ngrok.exe in current directory or ngrok subdirectory
        $ngrokPath = if (Test-Path "ngrok.exe") { ".\ngrok.exe" } elseif (Test-Path "ngrok\ngrok.exe") { ".\ngrok\ngrok.exe" } else { $null }
        if (-not $ngrokPath) {
          Write-Error "ngrok.exe not found in expected locations"
          exit 1
        }
        Write-Output "Using ngrok at: $ngrokPath"

        # Verify NGROK_AUTH_TOKEN is set
        if (-not $env:NGROK_AUTH_TOKEN) {
          Write-Error "NGROK_AUTH_TOKEN is not set. Please add it to GitHub Secrets."
          exit 1
        }

        # Set ngrok authtoken
        & $ngrokPath authtoken $env:NGROK_AUTH_TOKEN
        if ($LASTEXITCODE -ne 0) { Write-Error "Failed to set ngrok authtoken"; exit 1 }

        # Start ngrok to expose RDP port
        Start-Process -FilePath $ngrokPath -ArgumentList "tcp 3389" -NoNewWindow
